t.test(choosetobe, age,
alternative = "two.sided",
paired = TRUE,
data = trimmed_df)
colnames(trimmed_df)
t.test(age, choosetobe,
alternative = "two.sided",
paired = TRUE,
data = trimmed_df)
t.test(trimmed_df$age, trimmed_df$choosetobe,
alternative = "two.sided",
paired = TRUE)
t.test(age, choosetobe,
alternative = "two.sided",
paired = TRUE)
attach(trimmed_df)
t.test(age, choosetobe,
alternative = "two.sided",
paired = TRUE)
require(effsize)
cohen.d(age, choosetobe,
alternative = "two.sided",
paired = TRUE)
?cohen.d
t.test(age, choosetobe,
alternative = "two.sided",
paired = TRUE)
?describe
require(schoRsch)
?describe
require(ez)
?describe
require(psych)
?describe()
?describe(trimmed_df)
describe(trimmed_df)
descriptives <- describe(trimmed_df)
descriptives
View(descriptives)
View(descriptives)
mean_agechoosetobe <- descriptives$mean
mean_agechoosetobe
mean_agechoosetobe <- descriptives$mean["choosetobe"]
mean_agechoosetobe <- descriptives$mean[,"choosetobe"]
mean_agechoosetobe <- descriptives$mean["choosetobe",]
mean_agechoosetobe <- descriptives["choosetobe","mean"]
require(psych)
descriptives <- describe(trimmed_df)
descriptives
descriptives <- describe(trimmed_df) %>% round(2)
descriptives
descriptives <- describe(trimmed_df)
descriptives
setwd("/Users/Ian/Dropbox/Work/Projects/PI age dataset/")
load(file = "Age IAT.public.2015.rdata")
trimmed_df <-
df %>%
select(session_id,
age,
sex,
choosetobe,
feel,
hopetolive,
othersthink,
atoma,  # A person moves from being an adult to middle-aged at what age?
ctoya,  # A person moves from being a child to being a young adult at what age?
matoo,  # A person moves from being middle-aged to being old at what age?
yatoa) %>%  # A person moves from being a young adult to being an adult at what age?
filter(!is.na(age))
df %>%
summarize(n = n(),
mean_age = round(mean(age, na.rm = TRUE), 2),
sd_age = round(sd(age, na.rm = TRUE), 2))
df %>%
count(sex)
View(trimmed_df)
View(trimmed_df)
require(psych)
descriptives        <- describe(trimmed_df)
descriptives
View(descriptives)
View(descriptives)
descriptives        <- trimmed_df %>% round(2) %>% describe(trimmed_df)
descriptives        <- describe(trimmed_df)
descriptives
?descrive
?describe
descriptives        <- describe(trimmed_df) %>% select(n, mean, sd)
descriptives
descriptives        <- describe(trimmed_df) %>% select(n, mean, sd) %>% round(2)
descriptives
descriptives        <- describe(trimmed_df) %>% select(n, mean, sd)
descriptives
descriptives        <- describe(trimmed_df) %>% select(n, mean, sd) %>% as.numeric()
descriptives
attach(trimmed_df)
t.test(age, choosetobe,
alternative = "two.sided",
paired = TRUE)
ggplot(trimmed_df, aes(x = age)) +
geom_density(adjust = 4) +
geom_vline(xintercept = mean_age) +
theme_minimal()
mean_age            <- descriptives["age","mean"]
mean_age
mean_agechoosetobe  <- descriptives["choosetobe","mean"]
mean_agechoosetobe
attach(trimmed_df)
t.test(age, choosetobe,
alternative = "two.sided",
paired = TRUE)
ggplot(trimmed_df, aes(x = age)) +
geom_density(adjust = 4) +
geom_vline(xintercept = mean_age) +
theme_minimal()
ggplot(data = trimmed_df) +
geom_density(aes(x = age), adjust = 4) +
geom_vline(xintercept = mean_age) +
theme_minimal()
ggplot(data = trimmed_df) +
geom_density(aes(x = choosetobe), adjust = 4) +
geom_vline(xintercept = mean_agechoosetobe) +
theme_minimal()
ggplot(data = trimmed_df) +
geom_density(aes(x = age), adjust = 4) +
geom_vline(xintercept = mean_age) +
theme_minimal()
ggplot(data = trimmed_df) +
geom_density(aes(x = choosetobe), adjust = 4) +
geom_vline(xintercept = mean_agechoosetobe) +
theme_minimal()
ggplot(data = trimmed_df) +
geom_density(aes(x = age), adjust = 4) +
geom_vline(xintercept = mean_age, colour = "red") +
theme_minimal()
ggplot(data = trimmed_df) +
geom_density(aes(x = age), adjust = 4, colour = "red") +
geom_vline(xintercept = mean_age, colour = "red") +
theme_minimal()
ggplot(data = trimmed_df) +
geom_density(aes(x = age), adjust = 4, colour = "red") +
geom_vline(xintercept = mean_age, colour = "red") +
geom_density(aes(x = choosetobe), adjust = 4, colour = "blue") +
geom_vline(xintercept = mean_agechoosetobe, colour = "blue") +
theme_minimal()
ggplot(data = trimmed_df) +
geom_density(aes(x = age), adjust = 4, colour = "red") +
geom_vline(xintercept = mean_age, colour = "red") +
theme_minimal()
ggplot(data = trimmed_df) +
geom_density(aes(x = choosetobe), adjust = 4, colour = "blue") +
geom_vline(xintercept = mean_agechoosetobe, colour = "blue") +
theme_minimal()
ggplot(data = trimmed_df) +
geom_density(aes(x = age), adjust = 4, colour = "red") +
geom_vline(xintercept = mean_age, colour = "red") +
geom_density(aes(x = choosetobe), adjust = 4, colour = "blue") +
geom_vline(xintercept = mean_agechoosetobe, colour = "blue") +
theme_minimal()
ggplot(data = trimmed_df) +
geom_vline(xintercept = mean_age, colour = "red") +
geom_vline(xintercept = mean_agechoosetobe, colour = "blue") +
theme_minimal()
geom_density(aes(x = age), adjust = 4, colour = "red") +
ggplot(data = trimmed_df) +
geom_density(aes(x = age), adjust = 4, colour = "red") +
geom_vline(xintercept = mean_age, colour = "red") +
geom_density(aes(x = choosetobe), adjust = 4, colour = "blue") +
geom_vline(xintercept = mean_agechoosetobe, colour = "blue") +
theme_minimal()
ggplot(data = trimmed_df) +
geom_density(aes(x = age), adjust = 4, colour = "red") +
geom_vline(xintercept = mean_age, colour = "red") +
geom_density(aes(x = choosetobe), adjust = 4, colour = "blue") +
geom_vline(xintercept = mean_agechoosetobe, colour = "blue") +
theme_minimal()
mean_age
mean_agechoosetobe
ggplot(data = trimmed_df) +
geom_density(aes(x = age), adjust = 4, colour = "red") +
geom_vline(xintercept = mean_age, colour = "red") +
theme_minimal()
ggplot(data = trimmed_df) +
geom_density(aes(x = choosetobe), adjust = 4, colour = "blue") +
geom_vline(xintercept = mean_agechoosetobe, colour = "blue") +
theme_minimal()
ggplot(data = trimmed_df) +
geom_density(aes(x = age), adjust = 4, colour = "red") +
geom_vline(xintercept = mean_age, colour = "red") +
geom_density(aes(x = choosetobe), adjust = 4, colour = "blue") +
geom_vline(xintercept = mean_agechoosetobe, colour = "blue") +
theme_minimal()
attach(trimmed_df)
t.test(age, choosetobe,
alternative = "two.sided",
paired = TRUE)
ggplot(data = trimmed_df) +
geom_point(aes(x = age, y = choosetobe), alpha = 0.1) +
theme_minimal()
ggplot(data = trimmed_df) +
geom_point(aes(x = age, y = choosetobe), alpha = 0.1) +
geom_smooth(aes(x = age, y = choosetobe), method = "lm") +
theme_minimal()
model_1 <- lm(data = trimmed_df,
formula = choosetobe ~ age)
summary(model_1)
summary(model_1)
ggplot(data = trimmed_df) +
geom_density(aes(x = age), adjust = 4, colour = "red") +
geom_vline(xintercept = mean_age, colour = "red") +
theme_minimal()
ggplot(data = trimmed_df) +
geom_density(aes(x = choosetobe), adjust = 4, colour = "blue") +
geom_vline(xintercept = mean_agechoosetobe, colour = "blue") +
theme_minimal()
ggplot(data = trimmed_df) +
geom_density(aes(x = age), adjust = 4, colour = "red") +
geom_vline(xintercept = mean_age, colour = "red") +
geom_density(aes(x = choosetobe), adjust = 4, colour = "blue") +
geom_vline(xintercept = mean_agechoosetobe, colour = "blue") +
theme_minimal()
attach(trimmed_df)
t.test(age, choosetobe,
alternative = "two.sided",
paired = TRUE)
ggplot(data = trimmed_df) +
geom_point(aes(x = age, y = choosetobe), alpha = 0.1) +
theme_minimal()
ggplot(data = trimmed_df) +
geom_point(aes(x = age, y = choosetobe), alpha = 0.1) +
geom_smooth(aes(x = age, y = choosetobe), method = "lm") +
theme_minimal()
model_1 <- lm(data = trimmed_df,
formula = choosetobe ~ age)
summary(model_1)
model_1 <- lm(choosetobe ~ age,
data = trimmed_df)
summary(model_1)
ggplot(trimmed_df, aes(x = age, y = othersthink)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm") +
theme_minimal()
model_2 <- lm(data = trimmed_df,
formula = othersthink ~ age)
summary(model_2)
transitions <-
trimmed_df %>%
rename(`adult to middle` = atoma,  # A person moves from being an adult to middle-aged at what age?
`child to ya` = ctoya,  # A person moves from being a child to being a young adult at what age?
`middle to old` = matoo,  # A person moves from being middle-aged to being old at what age?
`ya to adult` = yatoa) %>%
gather(transition_type, transition_age, c(`adult to middle`, `child to ya`, `middle to old`, `ya to adult`)) %>%
mutate(transition_type = as.factor(transition_type)) %>%
filter(!is.na(transition_age), !is.na(transition_type))
ggplot(transitions, aes(x = transition_age, colour = transition_type, fill = transition_type)) +
geom_density(alpha = 0.5, adjust = 5) +  # try changing the kernal smoothing width via adjust.
theme_minimal()
model_1 <- lm(data = transitions,
formula = transition_age ~ transition_type)
drop1(model_1, scope = .~., test = "Chisq")
summary(model_1)
ggplot(transitions, aes(x = age, y = transition_age, colour = transition_type, fill = transition_type)) +
geom_smooth(method = "lm") +
theme_minimal()
model_2 <- lm(data = transitions,
formula = transition_age ~ age * transition_type)
drop1(model_2, scope = .~., test = "Chisq")
summary(model_2)
install.packages('jmv')
require(jvm)
require(jmv)
?jmv
?anova
anova(ToothGrowth,
dep='len',
factors=c('dose', 'supp'))
x <- anova(ToothGrowth,
dep='len',
factors=c('dose', 'supp'))
x
x <- anova(ToothGrowth,
dep='len',
factors=c('dose', 'supp'),
qq = TRUE)
x <- anova(ToothGrowth,
dep='len',
factors=c('dose', 'supp'),
qq = TRUE,
effectSize = "omega")
x
x <- anova(ToothGrowth,
dep='len',
factors=c('dose', 'supp'),
qq = TRUE,
effectSize = "eta")
x
x <- anova(ToothGrowth,
dep='len',
factors=c('dose', 'supp'),
qq = TRUE,
effectSize = "omega")
x
x$descPlot
x$descPlot
x$desc
x <- anova(ToothGrowth,
dep='len',
factors=c('dose', 'supp'),
qq = TRUE,
effectSize = "omega",
descStats = TRUE)
x$desc
x
anova(ToothGrowth,
dep='len',
factors=c('dose', 'supp'),
qq = TRUE,
effectSize = "omega",
descStats = TRUE)
# title: Exploring self-reported beliefs about age
# author: Ian Hussey (ian.hussey@ugent.be)
# license:
#   code: GPLv3+
#   data: CC0
# behaviours being shaped in this demo: coding, data representation, linear regression, plotting
# dependencies ------------------------------------------------------------
library(foreign)
library(tidyverse)
# get data ----------------------------------------------------------------
setwd("/Users/Ian/Dropbox/Work/Projects/PI age dataset/")
# data from project implicit demo datasets for Age IAT 2015 data https://osf.io/pbzcu/
# convert spss to rdata
#df <- read.spss("Age IAT.public.2015.sav", to.data.frame=TRUE)
#save(df, file = "Age IAT.public.2015.rdata")
load(file = "Age IAT.public.2015.rdata")
# tidy up vars
trimmed_df <-
df %>%
select(session_id,
age,
sex,
choosetobe,
feel,
hopetolive,
othersthink,
atoma,  # A person moves from being an adult to middle-aged at what age?
ctoya,  # A person moves from being a child to being a young adult at what age?
matoo,  # A person moves from being middle-aged to being old at what age?
yatoa) %>%  # A person moves from being a young adult to being an adult at what age?
filter(!is.na(age))
## Do people want to be a different age to what they are?
# descriptives ------------------------------------------------------------
# age choose to be
require(psych)
descriptives        <- describe(trimmed_df) %>% select(n, mean, sd)
descriptives
mean_age            <- descriptives["age","mean"]
mean_age
mean_agechoosetobe  <- descriptives["choosetobe","mean"]
mean_agechoosetobe
# plots
ggplot(data = trimmed_df) +
geom_density(aes(x = age), adjust = 4, colour = "red") +
geom_vline(xintercept = mean_age, colour = "red") +
theme_minimal()
ggplot(data = trimmed_df) +
geom_density(aes(x = choosetobe), adjust = 4, colour = "blue") +
geom_vline(xintercept = mean_agechoosetobe, colour = "blue") +
theme_minimal()
ggplot(data = trimmed_df) +
geom_density(aes(x = age), adjust = 4, colour = "red") +
geom_vline(xintercept = mean_age, colour = "red") +
geom_density(aes(x = choosetobe), adjust = 4, colour = "blue") +
geom_vline(xintercept = mean_agechoosetobe, colour = "blue") +
theme_minimal()
# NHST --------------------------------------------------------------------
attach(trimmed_df)
t.test(age, choosetobe,
alternative = "two.sided",
paired = TRUE)
# linear regression -------------------------------------------------------
ggplot(data = trimmed_df) +
geom_point(aes(x = age, y = choosetobe), alpha = 0.1) +
theme_minimal()
ggplot(data = trimmed_df) +
geom_point(aes(x = age, y = choosetobe), alpha = 0.1) +
geom_smooth(aes(x = age, y = choosetobe), method = "lm") +
theme_minimal()
ggplot(data = trimmed_df) +
geom_point(aes(x = age, y = choosetobe), alpha = 0.1) +
theme_minimal()
ggplot(data = trimmed_df) +
geom_point(aes(x = age, y = choosetobe), alpha = 0.1)
ggplot(data = trimmed_df) +
geom_point(aes(x = age, y = choosetobe), alpha = 0.1) +
theme_classic()
ggplot(data = trimmed_df) +
geom_point(aes(x = age, y = choosetobe), alpha = 0.1) +
theme_minimal()
ggplot(data = trimmed_df) +
geom_point(aes(x = age, y = choosetobe), alpha = 0.1) +
geom_smooth(aes(x = age, y = choosetobe), method = "lm") +
theme_minimal()
model_1 <- lm(choosetobe ~ age,
data = trimmed_df)
summary(model_1)
# dependencies ------------------------------------------------------------
library(foreign)
library(tidyverse)
library(psych)
# get data ----------------------------------------------------------------
# data from project implicit demo datasets for Age IAT 2015 data https://osf.io/pbzcu/
# convert spss to rdata
#df <- read.spss("Age IAT.public.2015.sav", to.data.frame=TRUE)
# save as rdata for future reference
#save(df, file = "Age IAT.public.2015.rdata")
# load rdata file
load(file = "Age IAT.public.2015.rdata")
# tidy data ---------------------------------------------------------------
trimmed_df <-
df %>%
select(session_id,
age,
sex,
choosetobe,
feel,
hopetolive,
othersthink,
atoma,  # A person moves from being an adult to middle-aged at what age?
ctoya,  # A person moves from being a child to being a young adult at what age?
matoo,  # A person moves from being middle-aged to being old at what age?
yatoa) %>%  # A person moves from being a young adult to being an adult at what age?
filter(!is.na(age)) %>%
filter(sex == "m" | sex == "f")
choosetobe_data <-
trimmed_df %>%
filter(!is.na(choosetobe)) %>%
select(age, choosetobe, sex) %>%
mutate(age = as.integer(age),
choosetobe = as.integer(choosetobe))
mean_age <- descriptives["age","mean"]
descriptives <- describe(choosetobe_data) %>% select(n, mean, sd)
descriptives
mean_age <- descriptives["age","mean"]
ggplot(data = choosetobe_data) +
geom_density(aes(x = age), adjust = 4, colour = "red", fill = "red", alpha = 0.2) +
geom_vline(xintercept = mean_age, colour = "red") +
theme_minimal()
mean_agechoosetobe <- descriptives["choosetobe","mean"]
ggplot(data = choosetobe_data) +
geom_density(aes(x = choosetobe), adjust = 4, colour = "blue", fill = "blue", alpha = 0.2) +
geom_vline(xintercept = mean_agechoosetobe, colour = "blue") +
theme_minimal()
ggplot(data = choosetobe_data) +
geom_density(aes(x = choosetobe, group = sex, fill = sex, colour = sex), adjust = 4, alpha = 0.2) +
geom_vline(xintercept = mean_age, colour = "red") +
theme_minimal()
ggplot(data = choosetobe_data) +
geom_density(aes(x = age), adjust = 4, colour = "red", fill = "red", alpha = 0.2) +
geom_vline(xintercept = mean_age, colour = "red") +
geom_density(aes(x = choosetobe), adjust = 4, colour = "blue", fill = "blue", alpha = 0.2) +
geom_vline(xintercept = mean_agechoosetobe, colour = "blue") +
theme_minimal()
attach(choosetobe_data)
t.test(age, choosetobe,
alternative = "two.sided",
paired = TRUE)
ggplot(data = choosetobe_data) +
geom_point(aes(x = age, y = choosetobe), colour = "darkgreen", alpha = 0.1) +
theme_minimal()
ggplot(trimmed_df, aes(x = age, y = othersthink)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm") +
theme_minimal()
model_2 <- lm(data = trimmed_df,
formula = othersthink ~ age)
summary(model_2)
# reshape age transitions data
transitions <-
trimmed_df %>%
rename(`adult to middle` = atoma,  # A person moves from being an adult to middle-aged at what age?
`child to ya` = ctoya,  # A person moves from being a child to being a young adult at what age?
`middle to old` = matoo,  # A person moves from being middle-aged to being old at what age?
`ya to adult` = yatoa) %>%
gather(transition_type, transition_age, c(`adult to middle`, `child to ya`, `middle to old`, `ya to adult`)) %>%
mutate(transition_type = as.factor(transition_type)) %>%
filter(!is.na(transition_age), !is.na(transition_type))
ggplot(transitions, aes(x = transition_age, colour = transition_type, fill = transition_type)) +
geom_density(alpha = 0.5, adjust = 5) +  # try changing the kernal smoothing width via adjust.
theme_minimal()
model_1 <- lm(data = transitions,
formula = transition_age ~ transition_type)
drop1(model_1, scope = .~., test = "Chisq")
summary(model_1)
drop1(model_1, scope = .~., test = "Chisq")
model_1 <- lm(data = transitions,
formula = transition_age ~ transition_type)
drop1(model_1, scope = .~., test = "Chisq")
summary(model_1)
ggplot(transitions, aes(x = age, y = transition_age, colour = transition_type, fill = transition_type)) +
geom_smooth(method = "lm") +
theme_minimal()
model_2 <- lm(data = transitions,
formula = transition_age ~ age * transition_type)
drop1(model_2, scope = .~., test = "Chisq")
summary(model_2)
library(tidyverse)
library(schoRsch)
x <- read.csv("/Users/Ian/git/Analogical learning via the IAT II/experiment 1/data/processed/processed SCIAT data - long format.csv")
x %>% write.csv("/Users/Ian/Desktop/x.csv")
install.packages("rmarkdown")
install.packages("rmarkdown")
